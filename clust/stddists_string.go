// Code generated by "stringer -type=StdDists"; DO NOT EDIT.

package clust

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Min-0]
	_ = x[Max-1]
	_ = x[Avg-2]
	_ = x[Contrast-3]
	_ = x[StdDistsN-4]
}

const _StdDists_name = "MinMaxAvgContrastStdDistsN"

var _StdDists_index = [...]uint8{0, 3, 6, 9, 17, 26}

func (i StdDists) String() string {
	if i < 0 || i >= StdDists(len(_StdDists_index)-1) {
		return "StdDists(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StdDists_name[_StdDists_index[i]:_StdDists_index[i+1]]
}

func (i *StdDists) FromString(s string) error {
	for j := 0; j < len(_StdDists_index)-1; j++ {
		if s == _StdDists_name[_StdDists_index[j]:_StdDists_index[j+1]] {
			*i = StdDists(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: StdDists")
}
