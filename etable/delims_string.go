// Code generated by "stringer -type=Delims"; DO NOT EDIT.

package etable

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Tab-0]
	_ = x[Comma-1]
	_ = x[Space-2]
	_ = x[Detect-3]
	_ = x[DelimsN-4]
}

const _Delims_name = "TabCommaSpaceDetectDelimsN"

var _Delims_index = [...]uint8{0, 3, 8, 13, 19, 26}

func (i Delims) String() string {
	if i < 0 || i >= Delims(len(_Delims_index)-1) {
		return "Delims(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Delims_name[_Delims_index[i]:_Delims_index[i+1]]
}

func (i *Delims) FromString(s string) error {
	for j := 0; j < len(_Delims_index)-1; j++ {
		if s == _Delims_name[_Delims_index[j]:_Delims_index[j+1]] {
			*i = Delims(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Delims")
}
